---
openapi: 3.0.0
info:
  title: Jokes API
  description: This is a simple jokes API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:5001/gabrovo-humour/us-central1/app/api
  description: API local development
- url: https://virtserver.swaggerhub.com/gabrovo-humou/Jokes/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /jokes:
    get:
      tags:
      - developers
      summary: searches jokes
      description: |
        By passing in the appropriate options, you can search for
        available jokes in the system
      operationId: searchJokes
      parameters:
      - name: itemsPerPage
        in: query
        description: pass the expected numbers of jokes
        required: true
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 1
          type: integer
          format: int32
      - name: currentPage
        in: query
        description: optional - expected page results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: flag how to order results
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - created
          - random
      - name: orderByDirection
        in: query
        description: Sort order
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Joke'
        "400":
          description: bad input parameter
    post:
      tags:
      - admins
      summary: adds an inventory item
      description: Adds an item to the system
      operationId: addInventory
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: item created
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
components:
  schemas:
    Joke:
      required:
      - content
      - created
      - id
      - title
      type: object
      properties:
        id:
          type: integer
          example: 10
        title:
          type: string
          example: Joke title
        created:
          type: integer
          example: 1605163948379
        content:
          type: array
          items:
            type: string
